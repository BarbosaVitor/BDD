// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ConsultaFaturasEmAberto.Cenario05
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Beneficiário cancelado no sistema e na data de referência")]
    public partial class BeneficiarioCanceladoNoSistemaENaDataDeReferenciaFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "BeneficiarioCanceladoNoSistemaENaDataDeReferencia.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Beneficiário cancelado no sistema e na data de referência", "EU como responsável pela análise de crédito para empréstimos\r\nQUERO saber o saldo" +
                    " devedor do titular \r\nPARA consultar de faturas em aberto", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Consultar o saldo devedor de um beneficiário que está cancelado no sistema e na d" +
            "ata de referência")]
        [NUnit.Framework.CategoryAttribute("FLUXO_ALTERNATIVO")]
        public virtual void ConsultarOSaldoDevedorDeUmBeneficiarioQueEstaCanceladoNoSistemaENaDataDeReferencia()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Consultar o saldo devedor de um beneficiário que está cancelado no sistema e na d" +
                    "ata de referência", new string[] {
                        "FLUXO_ALTERNATIVO"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
testRunner.Given("um beneficiário titular com uma fatura em aberto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 10
testRunner.And("cancelado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "MatriculaFuncional",
                        "Nome",
                        "Cpf",
                        "Modulos",
                        "Plano"});
            table1.AddRow(new string[] {
                        "1",
                        "00123456",
                        "\"JOAO DA SILVA\"",
                        "\"79956013013\"",
                        "\"1 - MSI - METRUS SAUDE INTEGRAL\"",
                        "\"1 – Metro\""});
#line 11
testRunner.And("cancelado na data de referência", ((string)(null)), table1, "E ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "CodigoDoPlano",
                        "MatriculaFuncional",
                        "Cpf",
                        "DataReferencia"});
            table2.AddRow(new string[] {
                        "1",
                        "1",
                        "\"00123456\"",
                        "\"79956013013\"",
                        "\"2019-02-25\""});
#line 14
testRunner.When("for consultado o saldo devedor no dia \"2019-02-25\"", ((string)(null)), table2, "Quando ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "CodigoDoPlano",
                        "MatriculaFuncional",
                        "Nome",
                        "Saldo",
                        "Juros",
                        "Multa",
                        "Correcao",
                        "Total",
                        "NumeroFatura"});
            table3.AddRow(new string[] {
                        "1",
                        "1",
                        "\"00123456\"",
                        "\"JOÃO DA SILVA\"",
                        "123.45",
                        "1.5",
                        "10.05",
                        "22.35",
                        "157.35",
                        "[]"});
#line 17
testRunner.Then("o serviço retornará", ((string)(null)), table3, "Então ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "IdFaturas",
                        "NumeroFatura",
                        "Parcela",
                        "Vencimento",
                        "Saldo",
                        "Juros",
                        "Multa",
                        "Correcao",
                        "Total",
                        "Modulo"});
            table4.AddRow(new string[] {
                        "1",
                        "98765",
                        "25",
                        "\"2019-01-25\"",
                        "123.45",
                        "1.5",
                        "10.05",
                        "22.35",
                        "157.35",
                        "[]"});
#line 20
testRunner.And("a Fatura deverá retornar", ((string)(null)), table4, "E ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "IdModulo",
                        "DescricaoModulo",
                        "Tipo",
                        "Competencia",
                        "NomeBeneficiario"});
            table5.AddRow(new string[] {
                        "1",
                        "\"MSI - METRUS SAÚDE INTEGRAL\"",
                        "\"Mensalidade\"",
                        "\"2019-01-01\"",
                        "\"JOAO DA SILVA\""});
            table5.AddRow(new string[] {
                        "1",
                        "\"MSI - METRUS SAÚDE INTEGRAL\"",
                        "\"Mensalidade\"",
                        "\"2019-01-01\"",
                        "\"MARIA DA SILVA\""});
#line 23
testRunner.And("os Modulos da Fatura deverão retornar", ((string)(null)), table5, "E ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

